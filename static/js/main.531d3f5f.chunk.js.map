{"version":3,"sources":["Recorder.js","Auth/Fields.js","Register.js","Login.js","Landing.js","Assess.js","Companion.js","Diary.js","App.js","index.js"],"names":["socket","recorder","text","setText","a","console","log","fetch","process","response","json","data","error","alert","token","WebSocket","texts","onmessage","message","msg","res","JSON","parse","dir","audio_start","keys","Object","sort","b","key","onerror","event","close","onclose","onopen","navigator","mediaDevices","getUserMedia","audio","then","stream","RecordRTC","type","mimeType","recorderType","StereoAudioRecorder","timeSlice","desiredSampRate","numberOfAudioChannels","bufferSize","audioBitsPerSecond","ondataavailable","blob","reader","FileReader","onload","base64data","result","send","stringify","audio_data","split","readAsDataURL","startRecording","catch","err","terminate_session","pauseRecording","Recorder","props","useState","isRecording","setRecording","Button","size","className","variant","onClick","stopRecording","UsernameField","Form","Group","controlId","Control","placeholder","label","PasswordField","GenericField","value","RecordableTextField","onChange","e","setValue","target","Register","history","useHistory","isLoading","setLoading","preventDefault","form","firstName","elements","formFirstName","lastName","formLastName","email","formUsername","password","formPassword","reqBody","logs","method","headers","body","resBody","window","setUser","push","onSubmit","disabled","Login","Landing","steps","style","transform","duration","Assess","isSaved","setSaved","mood","setMood","setMessage","handleSubmit","user","_id","MoodChooser","MoodButton","currentMood","active","Companion","as","rows","Diary","setLog","useEffect","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.531d3f5f.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport RecordRTC, { StereoAudioRecorder } from 'recordrtc';\n\nlet isRecording = false;\nlet socket;\nlet recorder;\n\nasync function startRecording(text, setText) {\n  console.log('start recording');\n  \n  const response = await fetch(`${process.env.REACT_APP_API_URL}/assemblyai`); // get temp session token from server.js (backend)\n  const data = await response.json();\n\n  if (data.error) {\n    alert(data.error)\n  }\n\n  const { token } = data;\n\n  // establish wss with AssemblyAI (AAI) at 16000 sample rate\n  socket = await new WebSocket(`wss://api.assemblyai.com/v2/realtime/ws?sample_rate=16000&token=${token}`);\n\n  // handle incoming messages to display transcription to the DOM\n  const texts = {};\n  socket.onmessage = (message) => {\n    let msg = text;\n    const res = JSON.parse(message.data);\n    console.dir(res);\n    texts[res.audio_start] = res.text;\n    console.dir(texts);\n    const keys = Object.keys(texts);\n    keys.sort((a, b) => a - b);\n    for (const key of keys) {\n      if (texts[key]) {\n        msg += ` ${texts[key]}`;\n      }\n    }\n    setText(msg);\n  };\n\n  socket.onerror = (event) => {\n    console.error(event);\n    socket.close();\n  }\n\n  socket.onclose = event => {\n    console.log(event);\n    socket = null;\n  }\n\n  socket.onopen = () => {\n    // once socket is open, begin recording\n    navigator.mediaDevices.getUserMedia({ audio: true })\n      .then((stream) => {\n        recorder = new RecordRTC(stream, {\n          type: 'audio',\n          mimeType: 'audio/webm;codecs=pcm', // endpoint requires 16bit PCM audio\n          recorderType: StereoAudioRecorder,\n          timeSlice: 250, // set 250 ms intervals of data that sends to AAI\n          desiredSampRate: 16000,\n          numberOfAudioChannels: 1, // real-time requires only one channel\n          bufferSize: 4096,\n          audioBitsPerSecond: 128000,\n          ondataavailable: (blob) => {\n            const reader = new FileReader();\n            reader.onload = () => {\n              const base64data = reader.result;\n\n              // audio data must be sent as a base64 encoded string\n              if (socket) {\n                socket.send(JSON.stringify({ audio_data: base64data.split('base64,')[1] }));\n              }\n            };\n            reader.readAsDataURL(blob);\n          },\n        });\n\n        recorder.startRecording();\n      })\n      .catch((err) => console.error(err));\n  };\n}\n\nasync function stopRecording() {\n  console.log('stop recording');\n  \n  if (socket) {\n    socket.send(JSON.stringify({terminate_session: true}));\n    socket.close();\n    socket = null;\n  }\n\n  if (recorder) {\n    recorder.pauseRecording();\n    recorder = null;\n  }\n}\n\nexport default function Recorder(props) {\n  const [isRecording, setRecording] = useState(false);\n  function handleClick() {\n    if (isRecording) stopRecording();\n    else startRecording(props.text, props.setText);\n    setRecording(!isRecording);\n  }\n  return (\n    <Button size='sm' className='record-button' variant='outline-danger' onClick={handleClick}>\n      {isRecording ? 'Stop' : 'Record'}\n    </Button>\n  );\n}\n","import Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport Recorder from '../Recorder';\n\nexport function UsernameField(props) {\n  return (\n    <Form.Group className='mb-2' controlId={props.controlId ?? 'formUsername'}>\n      <Form.Control type='email' placeholder={props.label ?? 'Email address'}/>\n    </Form.Group>\n  );\n}\n\nexport function PasswordField(props) {\n  return (\n    <Form.Group className='mb-2' controlId={props.controlId ?? 'formPassword'}>\n      <Form.Control type='password' placeholder={props.label ?? 'Password'}/>\n    </Form.Group>\n  );\n}\n\nexport function GenericField(props){\n  return (\n    <Form.Group className='mb-2' controlId={props.controlId}>\n      <Form.Control type='text' placeholder={props.label} value={props.value}/>\n    </Form.Group>\n  );\n}\n\nexport function RecordableTextField(props) {\n  return (\n    <Form.Group className='mb-2 flex-row' controlId={props.controlId}>\n      <Form.Control type='text' placeholder={props.label} value={props.value} onChange={e => props.setValue(e.target.value)}/>\n      <Recorder text={props.value} setText={props.setValue}/>\n    </Form.Group>\n  );\n}\n","import { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './App.css';\nimport './Register.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport { UsernameField, PasswordField, GenericField } from './Auth/Fields';\n\nconst Register = (props) => {\n  const history = useHistory();\n  const [isLoading, setLoading] = useState(false);\n  \n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (isLoading) return;\n    setLoading(true);\n    \n    const form = event.target;\n    const firstName = form.elements.formFirstName.value;\n    const lastName = form.elements.formLastName.value;\n    const email = form.elements.formUsername.value;\n    const password = form.elements.formPassword.value;\n    // TODO: Validate re-entered password\n    \n    const reqBody = { firstName, lastName, email, password, logs: [] };\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/users`,\n        {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(reqBody)\n        }\n      );\n      \n      const resBody = await response.json();\n      console.dir(resBody);\n    \n      if (resBody.error) {\n        window.alert(\"Couldn't create the account\");\n      } else {\n        props.setUser(reqBody);\n        history.push('/assess');\n      }\n    \n    } catch (error) {\n      console.log(error);\n      window.alert('Failed to contact server :(');\n    }\n    \n    setLoading(false);\n  }\n  \n  return (\n    <div className=\"reg-container align-center\">\n      <h1>Register</h1>\n      <Form className='reg width-30' onSubmit={handleSubmit}>\n        <GenericField controlId=\"formFirstName\" label=\"First name\"/>\n        <GenericField controlId=\"formLastName\" label=\"Last name\"/>\n        <UsernameField/>\n        <PasswordField/>\n        <PasswordField controlId=\"formConfirmPassword\" label=\"Re-enter password\"/>\n        <Button className='fullwidth' variant=\"primary\" disabled={isLoading} type=\"submit\">\n          {!isLoading ? 'Register' : 'Registering…'}\n        </Button>\n        <div className='login-link-container'>\n          <Button className='fullwidth' variant='primary' onClick={() => history.push('/login')}>Log into existing account</Button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport default Register\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport { UsernameField, PasswordField } from './Auth/Fields';\n\nexport default function Login(props) {\n  const history = useHistory();\n  const [isLoading, setLoading] = useState(false);\n  \n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (isLoading) return;\n    setLoading(true);\n    \n    const form = event.target;\n    const email = form.elements.formUsername.value;\n    const password = form.elements.formPassword.value;\n    \n    const reqBody = { email, password };\n    console.dir(reqBody);\n\n    try {\n      console.log(`${process.env.REACT_APP_API_URL}/validate`);\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/validate`,\n        {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(reqBody)\n        }\n      );\n      \n      const resBody = await response.json();\n      console.dir(resBody);\n    \n      if (resBody.data) {\n        props.setUser(resBody.data);\n        history.push('/assess');\n      } else {\n        window.alert('Invalid email or password, please try again');\n      }\n    } catch (error) {\n      console.log(error);\n      window.alert('Failed to contact server :(');\n    }\n    \n    setLoading(false);\n  }\n  \n  return (\n    <div className='align-center'>\n      <h1>Log in</h1>\n      <Form className='width-30' onSubmit={handleSubmit}>\n        <UsernameField/>\n        <PasswordField/>\n        <Button className='fullwidth' variant=\"primary\" disabled={isLoading} type=\"submit\">\n          {!isLoading ? 'Log in' : 'Logging in…'}\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './App.css';\nimport './Landing.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Animate from 'react-smooth';\n\nexport default function Landing() {\n  const history = useHistory();\n  \n  const appearTransitionSteps = [\n    {\n      style: {\n        transform: 'translate(0,-500px)',\n      },\n      duration: 0\n    },\n    {\n      style: {\n        transform: 'translate(0,0)'\n      },\n      duration: 800\n    }\n  ];\n  \n  return <Animate steps={appearTransitionSteps}>\n      <div className='align-center'>\n        <h1>Companion</h1>\n        <h2>your mindfulness buddy</h2>\n        <Button className='wide get-started' size='lg' variant='primary' onClick={() => history.push('/register')}>Get Started</Button>\n      </div>\n  </Animate>;\n}\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './App.css';\nimport './Assess.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport { GenericField, RecordableTextField } from './Auth/Fields';\n\nexport default function Assess(props) {\n  const history = useHistory();\n  const [isLoading, setLoading] = useState(false);\n  const [isSaved, setSaved] = useState(false);\n  \n  const [mood, setMood] = useState(null);\n  const [message, setMessage] = useState('');\n  \n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (isLoading) return;\n    setLoading(true);\n    \n    const reqBody = { mood, message };\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/${props.user._id}/logs`,\n        {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(reqBody)\n        }\n      );\n      \n      const resBody = await response.json();\n      console.dir(resBody);\n    \n      if (resBody.error) {\n        console.dir(resBody.error);\n        window.alert(\"Couldn't save, please try again\");\n      } else {\n        setSaved(true);\n      }\n    \n    } catch (error) {\n      console.dir(error);\n      window.alert('Failed to contact server :(');\n    }\n    \n    setLoading(false);\n  }\n  \n  function handleMyDiary() {\n    history.push('/diary')\n  }\n  function handleTalkToSomeone() {\n    history.push('/companion');\n  }\n  \n  return (\n    <div className='align-center flex-column gap-4'>\n      <h1>Welcome back, {props.user.firstName}</h1>\n      <h2>How are you feeling today?</h2>\n      <MoodChooser mood={mood} setMood={setMood}/>\n      <Form className='width-50' onSubmit={handleSubmit}>\n        <RecordableTextField controlId='formMessage' label='Describe your day…' value={message} setValue={setMessage}/>\n        <div className='align-center flex-column'>\n          <Button className='fullwidth' variant='success' onClick={handleSubmit} disabled={!mood || isLoading || isSaved}>\n            {isLoading ? 'Saving…' : !isSaved ? 'Save' : 'Entry saved'}\n          </Button>\n          <div className='fullwidth flex-row gap-2'>\n            <Button className='fullwidth' variant='primary' onClick={handleMyDiary}>My diary</Button>\n            <Button className='fullwidth' variant='primary' onClick={handleTalkToSomeone}>Talk to someone</Button>\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nfunction MoodChooser(props) {\n  \n  return (\n    <div className='mood-chooser'>\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='☺️'/>\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😄'/>\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😀'/>\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='🙂'/>\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😐'/>\n      <hr/>\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😕'/>\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='☹️'/>\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😔'/>\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😥'/>\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😭'/>\n    </div>\n  );\n}\n\nfunction MoodButton(props) {\n  return (\n    <Button size='sm' variant='primary' className={'mood-button '} active={props.currentMood == props.mood} onClick={() => props.setMood(props.mood)}>{props.mood}</Button>\n  );\n}\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport './Companion.css'\nimport { RecordableTextField } from './Auth/Fields';\n\nconst Companion = () => {\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    // {bot: \"text\"}\n    // {user: \"text\"}\n\n    return (\n        <div>\n            <h1>Companion</h1>\n            <div className=\"messages-view-container\">\n                <div className=\"messages-view\">\n                    <div className=\"message\">\n                        <h1>Hello</h1>\n                    </div>\n                </div>\n            </div>\n            <Form className=\"message-input\">\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Control as=\"textarea\" placeholder=\"Type message here\" rows={3} />\n            </Form.Group>\n            </Form>\n            <RecordableTextField controlId='formMessage' label='Type Message Here' value={message} setValue={setMessage}/>\n        </div>\n    );\n}\n\nexport default Companion;\n","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './App.css';\nimport './Diary.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Diary(props) {\n  const history = useHistory();\n  const [isLoading, setLoading] = useState(false);\n  \n  const [log, setLog] = useState(null);\n  \n  useEffect(async () => {\n    setLoading(true);\n    \n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/${props.user._id}/logs`,\n        {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n      const resBody = await response.json();\n      console.dir(resBody);\n    \n      if (resBody.error) {\n        console.dir(resBody.error);\n        window.alert(\"Couldn't retrieve entries, please try again\");\n      } else {\n        setLog(resBody.logs);\n      }\n    \n    } catch (error) {\n      console.dir(error);\n      window.alert('Failed to contact server :(');\n    }\n    \n    setLoading(false);\n  }, []);\n  \n  return (\n    <div className='align-center flex-column gap-4'>\n      <h1>My diary</h1>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport './App.css';\nimport Register from './Register';\nimport Login from './Login';\nimport Landing from './Landing';\nimport Assess from './Assess';\nimport Companion from './Companion';\nimport Diary from './Diary';\n\nfunction App() {\n  const [user, setUser] = useState({\n    _id: '616b918b2749f77e074616ac',\n    email: 'demo@demo.user',\n    firstName: 'Demo',\n    lastName: 'User',\n    password: 'password',\n    logs: []\n  });\n  \n  return (\n    <div className=\"App flex-column\">\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Landing/>\n          </Route>\n          <Route exact path='/login'>\n            <Login setUser={setUser}/>\n          </Route>\n          <Route exact path='/register'>\n            <Register setUser={setUser}/>\n          </Route>\n          <Route exact path='/assess'>\n            <Assess user={user}/>\n          </Route>\n          <Route exact path='/companion'>\n            <Companion/>\n          </Route>\n          <Route exact path='/diary'>\n            <Diary user={user}/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}