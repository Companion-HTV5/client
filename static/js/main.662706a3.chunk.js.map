{"version":3,"sources":["Recorder.js","Auth/Fields.js","Register.js","Auth/Auth0.js","Login.js","Landing.js","Assess.js","Companion.js","Diary.js","App.js","index.js"],"names":["socket","recorder","text","setText","a","console","log","fetch","process","response","json","data","error","alert","token","WebSocket","texts","onmessage","message","msg","res","JSON","parse","dir","audio_start","keys","Object","sort","b","key","onerror","event","close","onclose","onopen","navigator","mediaDevices","getUserMedia","audio","then","stream","RecordRTC","type","mimeType","recorderType","StereoAudioRecorder","timeSlice","desiredSampRate","numberOfAudioChannels","bufferSize","audioBitsPerSecond","ondataavailable","blob","reader","FileReader","onload","base64data","result","send","stringify","audio_data","split","readAsDataURL","startRecording","catch","err","terminate_session","pauseRecording","Recorder","props","useState","isRecording","setRecording","Button","size","className","variant","onClick","stopRecording","UsernameField","Form","Group","controlId","Control","placeholder","label","PasswordField","GenericField","value","RecordableTextField","onChange","e","setValue","target","onKeyPress","Register","history","useHistory","isLoading","setLoading","preventDefault","form","firstName","elements","formFirstName","lastName","formLastName","email","formUsername","password","formPassword","reqBody","logs","method","headers","body","resBody","window","setUser","user","push","onSubmit","disabled","Auth0","loginWithRedirect","useAuth0","Login","Landing","steps","style","transform","duration","Assess","isSaved","setSaved","mood","setMood","setMessage","handleSubmit","_id","MoodChooser","MoodButton","currentMood","active","Companion","messages","setMessages","setBotMessage","getBotResponse","userInput","handleSubmitMessage","bot","saveConversation","id","url","map","Diary","setLogs","useEffect","index","DiaryEntry","length","justifyContent","alignItems","conversations","conversation","display","minWidth","App","exact","path","ReactDOM","render","StrictMode","domain","clientId","redirectUri","location","origin","document","getElementById"],"mappings":"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","file":"static/js/main.662706a3.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './App.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport RecordRTC, { StereoAudioRecorder } from 'recordrtc';\r\n\r\nlet isRecording = false;\r\nlet socket;\r\nlet recorder;\r\n\r\nasync function startRecording(text, setText) {\r\n  console.log('start recording');\r\n  \r\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/assemblyai`); // get temp session token from server.js (backend)\r\n  const data = await response.json();\r\n\r\n  if (data.error) {\r\n    alert(data.error)\r\n  }\r\n\r\n  const { token } = data;\r\n\r\n  // establish wss with AssemblyAI (AAI) at 16000 sample rate\r\n  socket = await new WebSocket(`wss://api.assemblyai.com/v2/realtime/ws?sample_rate=16000&token=${token}`);\r\n\r\n  // handle incoming messages to display transcription to the DOM\r\n  const texts = {};\r\n  socket.onmessage = (message) => {\r\n    let msg = text;\r\n    const res = JSON.parse(message.data);\r\n    console.dir(res);\r\n    texts[res.audio_start] = res.text;\r\n    console.dir(texts);\r\n    const keys = Object.keys(texts);\r\n    keys.sort((a, b) => a - b);\r\n    for (const key of keys) {\r\n      if (texts[key]) {\r\n        msg += ` ${texts[key]}`;\r\n      }\r\n    }\r\n    setText(msg);\r\n  };\r\n\r\n  socket.onerror = (event) => {\r\n    console.error(event);\r\n    socket.close();\r\n  }\r\n\r\n  socket.onclose = event => {\r\n    console.log(event);\r\n    socket = null;\r\n  }\r\n\r\n  socket.onopen = () => {\r\n    // once socket is open, begin recording\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then((stream) => {\r\n        recorder = new RecordRTC(stream, {\r\n          type: 'audio',\r\n          mimeType: 'audio/webm;codecs=pcm', // endpoint requires 16bit PCM audio\r\n          recorderType: StereoAudioRecorder,\r\n          timeSlice: 250, // set 250 ms intervals of data that sends to AAI\r\n          desiredSampRate: 16000,\r\n          numberOfAudioChannels: 1, // real-time requires only one channel\r\n          bufferSize: 4096,\r\n          audioBitsPerSecond: 128000,\r\n          ondataavailable: (blob) => {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n              const base64data = reader.result;\r\n\r\n              // audio data must be sent as a base64 encoded string\r\n              if (socket) {\r\n                socket.send(JSON.stringify({ audio_data: base64data.split('base64,')[1] }));\r\n              }\r\n            };\r\n            reader.readAsDataURL(blob);\r\n          },\r\n        });\r\n\r\n        recorder.startRecording();\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n}\r\n\r\nasync function stopRecording() {\r\n  console.log('stop recording');\r\n  \r\n  if (socket) {\r\n    socket.send(JSON.stringify({terminate_session: true}));\r\n    socket.close();\r\n    socket = null;\r\n  }\r\n\r\n  if (recorder) {\r\n    recorder.pauseRecording();\r\n    recorder = null;\r\n  }\r\n}\r\n\r\nexport default function Recorder(props) {\r\n  const [isRecording, setRecording] = useState(false);\r\n  function handleClick() {\r\n    if (isRecording) stopRecording();\r\n    else startRecording(props.text, props.setText);\r\n    setRecording(!isRecording);\r\n  }\r\n  return (\r\n    <Button size='sm' className='record-button' variant='outline-danger' onClick={handleClick}>\r\n      {isRecording ? 'Stop' : 'Record'}\r\n    </Button>\r\n  );\r\n}\r\n","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Recorder from '../Recorder';\r\n\r\nexport function UsernameField(props) {\r\n  return (\r\n    <Form.Group className='mb-2' controlId={props.controlId ?? 'formUsername'}>\r\n      <Form.Control type='email' placeholder={props.label ?? 'Email address'}/>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport function PasswordField(props) {\r\n  return (\r\n    <Form.Group className='mb-2' controlId={props.controlId ?? 'formPassword'}>\r\n      <Form.Control type='password' placeholder={props.label ?? 'Password'}/>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport function GenericField(props){\r\n  return (\r\n    <Form.Group className='mb-2' controlId={props.controlId}>\r\n      <Form.Control type='text' placeholder={props.label} value={props.value}/>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport function RecordableTextField(props) {\r\n  return (\r\n    <Form.Group className='mb-2 flex-row' controlId={props.controlId}>\r\n      <Form.Control type='text' placeholder={props.label} value={props.value} onChange={e => props.setValue(e.target.value)} onKeyPress={props.onKeyPress}/>\r\n      <Recorder text={props.value} setText={props.setValue}/>\r\n    </Form.Group>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport './App.css';\r\nimport './Register.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { UsernameField, PasswordField, GenericField } from './Auth/Fields';\r\n\r\nconst Register = (props) => {\r\n  const history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  \r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (isLoading) return;\r\n    setLoading(true);\r\n    \r\n    const form = event.target;\r\n    const firstName = form.elements.formFirstName.value;\r\n    const lastName = form.elements.formLastName.value;\r\n    const email = form.elements.formUsername.value;\r\n    const password = form.elements.formPassword.value;\r\n    // TODO: Validate re-entered password\r\n    \r\n    const reqBody = { firstName, lastName, email, password, logs: [] };\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/users`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(reqBody)\r\n        }\r\n      );\r\n      \r\n      const resBody = await response.json();\r\n      console.dir(resBody);\r\n    \r\n      if (resBody.error) {\r\n        window.alert(\"Couldn't create the account\");\r\n      } else {\r\n        props.setUser(resBody.user);\r\n        history.push('/assess');\r\n      }\r\n    \r\n    } catch (error) {\r\n      console.log(error);\r\n      window.alert('Failed to contact server :(');\r\n    }\r\n    \r\n    setLoading(false);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"reg-container align-center width-40-on-desktop\">\r\n      <h1>Register</h1>\r\n      <Form className='reg' onSubmit={handleSubmit}>\r\n        <GenericField controlId=\"formFirstName\" label=\"First name\"/>\r\n        <GenericField controlId=\"formLastName\" label=\"Last name\"/>\r\n        <UsernameField/>\r\n        <PasswordField/>\r\n        <PasswordField controlId=\"formConfirmPassword\" label=\"Re-enter password\"/>\r\n        <Button className='fullwidth' variant=\"primary\" disabled={isLoading} type=\"submit\">\r\n          {!isLoading ? 'Register' : 'Registering…'}\r\n        </Button>\r\n        <div className='login-link-container'>\r\n          <Button className='fullwidth' variant='primary' onClick={() => history.push('/login')}>Log into existing account</Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst Auth0 = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return <button onClick={() => loginWithRedirect()}>Auth0</button>;\r\n};\r\n\r\nexport default Auth0;\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './App.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nimport { UsernameField, PasswordField } from './Auth/Fields';\r\nimport Auth0 from './Auth/Auth0';\r\n\r\nexport default function Login(props) {\r\n  const history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  \r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (isLoading) return;\r\n    setLoading(true);\r\n    \r\n    const form = event.target;\r\n    const email = form.elements.formUsername.value;\r\n    const password = form.elements.formPassword.value;\r\n    \r\n    const reqBody = { email, password };\r\n    console.dir(reqBody);\r\n\r\n    try {\r\n      console.log(`${process.env.REACT_APP_API_URL}/validate`);\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/validate`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(reqBody)\r\n        }\r\n      );\r\n      \r\n      const resBody = await response.json();\r\n      console.dir(resBody);\r\n    \r\n      if (resBody.data) {\r\n        props.setUser(resBody.data);\r\n        history.push('/assess');\r\n      } else {\r\n        window.alert('Invalid email or password, please try again');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      window.alert('Failed to contact server :(');\r\n    }\r\n    \r\n    setLoading(false);\r\n  }\r\n\r\n\r\n  \r\n  return (\r\n    <div className='align-center width-40-on-desktop'>\r\n      <h1>Log in</h1>\r\n      <Form className='fullwidth' onSubmit={handleSubmit}>\r\n        <UsernameField/>\r\n        <PasswordField/>\r\n        <Button className='fullwidth' variant=\"primary\" disabled={isLoading} type=\"submit\">\r\n          {!isLoading ? 'Log in' : 'Logging in…'}\r\n        </Button>\r\n        <div className='fullwidth flex-row gap-2'>\r\n          <Button className='fullwidth' variant='primary' onClick={() => history.push('/register')}>Don't have an account</Button>\r\n        </div>\r\n      </Form>\r\n      <Auth0/>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './App.css';\r\nimport './Landing.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Animate from 'react-smooth';\r\n\r\nexport default function Landing() {\r\n  const history = useHistory();\r\n  \r\n  const appearTransitionSteps = [\r\n    {\r\n      style: {\r\n        transform: 'translate(0,-500px)',\r\n      },\r\n      duration: 0\r\n    },\r\n    {\r\n      style: {\r\n        transform: 'translate(0,0)'\r\n      },\r\n      duration: 800\r\n    }\r\n  ];\r\n  \r\n  return <Animate steps={appearTransitionSteps}>\r\n      <div className='align-center'>\r\n        <h1>Companion</h1>\r\n        <h2>your mindfulness buddy</h2>\r\n        <Button className='wide get-started' size='lg' variant='primary' onClick={() => history.push('/register')}>Get Started</Button>\r\n      </div>\r\n  </Animate>;\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './App.css';\r\nimport './Assess.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { GenericField, RecordableTextField } from './Auth/Fields';\r\n\r\nexport default function Assess(props) {\r\n  const history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isSaved, setSaved] = useState(false);\r\n  \r\n  const [mood, setMood] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  \r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (isLoading) return;\r\n    setLoading(true);\r\n    \r\n    const reqBody = { mood, message };\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/${props.user._id}/logs`,\r\n        {\r\n          method: 'PATCH',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(reqBody)\r\n        }\r\n      );\r\n      \r\n      const resBody = await response.json();\r\n      console.dir(resBody);\r\n    \r\n      if (resBody.error) {\r\n        console.dir(resBody.error);\r\n        window.alert(\"Couldn't save, please try again\");\r\n      } else {\r\n        setSaved(true);\r\n      }\r\n    \r\n    } catch (error) {\r\n      console.dir(error);\r\n      window.alert('Failed to contact server :(');\r\n    }\r\n    \r\n    setLoading(false);\r\n  }\r\n  \r\n  function handleMyDiary() {\r\n    history.push('/diary')\r\n  }\r\n  function handleTalkToSomeone() {\r\n    history.push('/companion');\r\n  }\r\n  \r\n  return (\r\n    <div className='align-center flex-column gap-4'>\r\n      <h1>Welcome back, {props.user.firstName}</h1>\r\n      <h2>How are you feeling today?</h2>\r\n      <MoodChooser mood={mood} setMood={setMood}/>\r\n      <Form className='width-50' onSubmit={handleSubmit}>\r\n        <RecordableTextField controlId='formMessage' label='Describe your day…' value={message} setValue={setMessage}/>\r\n        <div className='align-center flex-column'>\r\n          <Button className='fullwidth' variant='success' onClick={handleSubmit} disabled={!mood || isLoading || isSaved}>\r\n            {isLoading ? 'Saving…' : !isSaved ? 'Save' : 'Entry saved'}\r\n          </Button>\r\n          <div className='fullwidth flex-row gap-2'>\r\n            <Button className='fullwidth' variant='primary' onClick={handleMyDiary}>My diary</Button>\r\n            <Button className='fullwidth' variant='primary' onClick={handleTalkToSomeone}>Talk to someone</Button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MoodChooser(props) {\r\n  \r\n  return (\r\n    <div className='mood-chooser'>\r\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='☺️'/>\r\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😄'/>\r\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😀'/>\r\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='🙂'/>\r\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😐'/>\r\n      <hr/>\r\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😕'/>\r\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='☹️'/>\r\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😔'/>\r\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😥'/>\r\n      <MoodButton currentMood={props.mood} setMood={props.setMood} mood='😭'/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MoodButton(props) {\r\n  return (\r\n    <Button size='sm' variant='primary' className={'mood-button '} active={props.currentMood == props.mood} onClick={() => props.setMood(props.mood)}>{props.mood}</Button>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './Companion.css'\r\nimport { RecordableTextField } from './Auth/Fields';\r\nimport axios from 'axios';\r\n\r\nconst Companion = (props) => {\r\n    const history = useHistory();\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [botMessage, setBotMessage] = useState('');\r\n    \r\n    const getBotResponse = async (userInput) => {\r\n        const url = \"https://companion-api-htv5.herokuapp.com/api/v1/12345678\";\r\n        userInput += \". I should\";\r\n        const res = await fetch(\r\n            url,\r\n            {\r\n              method: 'POST',\r\n              headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify({message: userInput})\r\n            }\r\n          );\r\n        const resBody = await res.json();\r\n        setBotMessage(resBody);\r\n\r\n        return resBody.message;\r\n    };\r\n\r\n    const handleSubmitMessage = async () => {\r\n        messages.push({user: message});\r\n        setMessages(messages);\r\n        const msg = message;\r\n        setMessage('');\r\n\r\n        // get response from bot\r\n        var data = await getBotResponse(msg);\r\n        if (data === '') data = \"Can you rephrase that? I don't seem to understand\";\r\n        messages.push({bot: data});\r\n        setMessages(messages);\r\n\r\n        setBotMessage('');\r\n    };\r\n\r\n    const saveConversation = async () => {\r\n        const baseUrl = \"https://companion-htv5.herokuapp.com/api/v1/\";\r\n        const id = props.user._id;\r\n        const endUrl = '/logs/conversations';\r\n\r\n        const url = baseUrl + id + endUrl;\r\n        console.log(url);\r\n        const res = await fetch(\r\n            url,\r\n            {\r\n              method: 'PATCH',\r\n              headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify({messages: messages})\r\n            }\r\n          );\r\n        const resBody = await res.json();\r\n        console.log(resBody);\r\n        alert(\"Conversation saved!\");\r\n    };\r\n\r\n    function handleGoBack() {\r\n        history.push('/assess');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Companion</h1>\r\n            <div className=\"messages-view-container\">\r\n                <div className=\"messages-view\">\r\n                    <div className=\"message\">\r\n                        {\r\n                            messages.map(msg => {\r\n                                return(\r\n                                    <div>\r\n                                        {msg.user ? <div className=\"user-message\">You: {msg.user}</div> : <div className=\"bot-message\">Bot: {msg.bot}</div>}\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <RecordableTextField className=\"message-input\" controlId='formMessage' label='Type Message Here' value={message} setValue={setMessage} onKeyPress={(e) => e.key === 'Enter' && handleSubmitMessage()}/>\r\n            <div className='fullwidth flex-row gap-2'>\r\n                <Button className='fullwidth' variant='primary' onClick={saveConversation}>Save Conversation</Button>\r\n                <Button className='fullwidth' variant='primary' onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Companion;\r\n","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './App.css';\r\nimport './Diary.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function Diary(props) {\r\n  const history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  \r\n  const [logs, setLogs] = useState(null);\r\n  \r\n  useEffect(async () => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/${props.user._id}/logs`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n      \r\n      const resBody = await response.json();\r\n      console.dir(resBody);\r\n    \r\n      if (resBody.error) {\r\n        console.dir(resBody.error);\r\n        window.alert(\"Couldn't retrieve entries, please try again\");\r\n      } else {\r\n        setLogs(resBody.logs);\r\n      }\r\n    \r\n    } catch (error) {\r\n      console.dir(error);\r\n      window.alert('Failed to contact server :(');\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, [props.user]);\r\n\r\n  function handleGoBack() {\r\n    history.push('/assess');\r\n  }\r\n  \r\n  return (\r\n    <div className='width-60 flex-column gap-4'>\r\n      <h1>My diary</h1>\r\n      <ul className='fullwidth diary-container'>\r\n        {\r\n          logs && logs.map((log, index) => {\r\n            return <>\r\n              <li key={`log-entry-${index}`}>\r\n                <DiaryEntry log={log} index={index}/>\r\n              </li>\r\n              {index !== logs.length - 1 && <hr/>}\r\n            </>;\r\n          })\r\n        }\r\n      </ul>\r\n      <div className='fullwidth flex-row gap-2'>\r\n        <Button className='fullwidth' variant='primary' onClick={handleGoBack}>Go Back</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DiaryEntry(props) {\r\n  return (\r\n    <div className='flex-row' style={{justifyContent: 'flex-start'}}>\r\n      <p className='align-left mood'>{props.log.mood}</p>\r\n      <div className='flex-column' style={{alignItems: 'flex-start'}}>\r\n        <p className='align-left message'>{props.log.message}</p>\r\n        <ul>\r\n          {\r\n            props.log.conversations && props.log.conversations.map((conversation, index) => {\r\n              return <>\r\n                <li key={`log-entry-${props.index}-conversation-${index}`}>\r\n                  <details>\r\n                    <summary className='align-left conversation'>\r\n                      Conversation #{index + 1}\r\n                    </summary>\r\n                    <p className='align-left conversation'>\r\n                      {conversation.map(msg => {\r\n                        return <>\r\n                          {msg.user && <span className='align-left' style={{display: 'inline-block', minWidth: '150px'}}>You: </span>}\r\n                          {msg.bot && <span className='align-left' style={{display: 'inline-block', minWidth: '150px'}}>Companion: </span>}\r\n                          {msg.user ?? msg.bot}\r\n                          {index !== conversation.length - 1 && <br/>}\r\n                        </>;\r\n                      })}\r\n                    </p>\r\n                  </details>\r\n                </li>\r\n              </>;\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport Landing from './Landing';\r\nimport Assess from './Assess';\r\nimport Companion from './Companion';\r\nimport Diary from './Diary';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState({\r\n    _id: '616b918b2749f77e074616ac',\r\n    email: 'demo@demo.user',\r\n    firstName: 'Demo',\r\n    lastName: 'User',\r\n    password: 'password',\r\n    logs: []\r\n  });\r\n  \r\n  return (\r\n    <div className=\"App flex-column\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Landing/>\r\n          </Route>\r\n          <Route exact path='/login'>\r\n            <Login setUser={setUser}/>\r\n          </Route>\r\n          <Route exact path='/register'>\r\n            <Register setUser={setUser}/>\r\n          </Route>\r\n          <Route exact path='/assess'>\r\n            <Assess user={user}/>\r\n          </Route>\r\n          <Route exact path='/companion'>\r\n            <Companion user={user}/>\r\n          </Route>\r\n          <Route exact path='/diary'>\r\n            <Diary user={user}/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Auth0Provider domain=\"dev-1phr29mi.us.auth0.com\" clientId=\"oNLolsNpomyzWKwoYb1wyXxZa2I9VkfY\" redirectUri={window.location.origin}>\r\n      <App />\r\n    </Auth0Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}